/**
 * 约瑟夫环问题.
 * n个人围成一圈, 从下标0开始数, 数到下标为m - 1的时候干掉那个人, 相当于数到第m个人, 数组下标从0开始
 * 然后下一个人继续从0开始数, 直到剩下最后一个人
 * 逆推思路:
 * 1. 当得出最终的胜者的时候, 此时只剩下一个人, 他的下标pos必定为0
 * 2. 可以推出在上一轮只剩下两个人的时候, 他也是存活的, 那么他的下标为pos = (0 + m) % 2. 因为只剩下两个人, 他存活
 *    那么另一个人必定被干掉, 所以另一个人的下标一定是m - 1, 那么他的下标一定是m, 因为是环, 所以要 mod 2
 * 3. 那么他在上上轮也是安全的, 总数是三个人, 他的下标pos = ((0 + m) % 2 + m) % 3
 * 4. 那么他在上上上也是安全的, 总数是四个人, 下标为(((0 + m) % 2 + m) % 3 + m) % 4
 * 5. ...
 * 6. 一直逆推到第一轮, 总数是 n 个人, 得到此时的pos即为结果
 * 所以逆推公式就是 (pos + m) % i, i是此时一共有多少人
 */
package Math;

/**
 * @author David Wong
 * @date 21/06/2023 10:46
 * Scanner in = new Scanner(System.in);
 */
public class JosephCircle {
    public int josephCircle(int n, int m) {
        int pos = 0;
        for (int i = 2; i < n + 1; i++) {
            pos = (pos + m) % i;
        }
        return pos + 1; // 加1是这是第几个人, 如果要求下标就不用加1了
    }
}
